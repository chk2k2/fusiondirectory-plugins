openapi: 3.0.0
info:
  description: This FusionDirectory REST API
  version: 1.0.0
  title: FusionDirectory
  contact:
    email: contact@fusiondirectory.org
  license:
    name: GPL2+
servers:
  - url: 'http://localhost/fusiondirectory/rest.php'
security:
  - session: []
tags:
  - name: tools
    description: API related stuff
  - name: objects
    description: 'List, get, create, delete objects'
  - name: types
    description: Get information on object types and tabs
paths:
  /login:
    post:
      operationId: login
      summary: Login to the API
      security: []
      tags:
        - tools
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ldap:
                  description: The ldap server to connect to
                  type: string
                user:
                  description: The user to login as
                  type: string
                  example: "fd-admin"
                password:
                  description: The password to use
                  type: string
                  example: "password"
              required:
                - user
                - password
      responses:
        '200':
          description: An API token
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ldaps:
    get:
      summary: List possible values for ldap parameter for login action
      operationId: listLdaps
      security: []
      tags:
        - tools
      responses:
        '200':
          description: The list of LDAPs
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                example: {
                          'default': 'default'
                        }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /token:
    get:
      summary: Get session token for current session
      operationId: getToken
      tags:
        - tools
      responses:
        '200':
          description: An API token
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /types:
    get:
      summary: List all types
      operationId: listTypes
      tags:
        - types
      responses:
        '200':
          description: A list of types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/types/{type}':
    get:
      summary: Get informations on a type
      operationId: getTypeInfo
      tags:
        - types
      parameters:
        - $ref: '#/components/parameters/type'
      responses:
        '200':
          description: Information about the type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/types/{type}/{tab}':
    get:
      summary: Get informations on a tab
      operationId: getTabInfo
      tags:
        - types
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/tab'
      responses:
        '200':
          description: Information about the tab
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabInfo'
              example: {
                        "sections": {
                          "main": {
                            "name": "Information",
                            "attrs": [
                              "base",
                              "cn",
                              "description",
                              "telephoneNumber",
                              "facsimileTelephoneNumber"
                            ]
                          },
                          "members": {
                            "name": "Role members",
                            "attrs": [
                              "roleOccupant"
                            ]
                          }
                        },
                        "sections_order": [
                          "main",
                          "members"
                        ]
                      }
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/objects/{type}':
    get:
      summary: Search objects of specific type
      operationId: listObjects
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/base'
        - $ref: '#/components/parameters/filter'
        - name: attrs
          in: query
          required: false
          description: The attributes to return
          schema:
            type: object
            example:
              sn: 1
              title: "*"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create an object of specific type
      operationId: createObject
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/base'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attrs:
                  description: The attributes of the object to create, grouped by tab
                  type: object
                  example: {
                            "user": {
                              "givenName": "John",
                              "sn": "Smith"
                            },
                            "posixAccount": {
                              "homeDirectory": "/home/john"
                            }
                          }
                template:
                  description: The template to use to create the object
                  type: string
                  example: "cn=user-template,ou=templates,ou=people,dc=example,dc=com"
              required:
                - attrs
      responses:
        '201':
          description: DN of the created object
          content:
            application/json:
              schema:
                type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/objects/{type}/{dn}':
    get:
      summary: Get attributes values from object main tab
      operationId: getObjectMainTab
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
      responses:
        '200':
          description: Attribute values
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete the object
      operationId: deleteObject
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
      responses:
        '204':
          description: success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/objects/{type}/{dn}/{tab}':
    get:
      summary: Get attributes values from object specific tab
      operationId: getObjectTab
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
        - $ref: '#/components/parameters/tab'
      responses:
        '200':
          description: Attribute values
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/objects/{type}/{dn}/{tab}/{attribute}':
    get:
      summary: Get a single attribute value(s)
      operationId: getAttributeValues
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
        - $ref: '#/components/parameters/tab'
        - $ref: '#/components/parameters/attribute'
      responses:
        '200':
          description: The attribute value(s)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyThing'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Set attribute value(s)
      operationId: setAttributeValues
      tags:
        - objects
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
        - $ref: '#/components/parameters/tab'
        - $ref: '#/components/parameters/attribute'
      requestBody:
        description: The new value(s)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyThing'
      responses:
        '204':
          description: success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add attribute values. Only on multivaluated attributes.
      operationId: addAttributeValues
      tags:
        - objects
        - multivaluated
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
        - $ref: '#/components/parameters/tab'
        - $ref: '#/components/parameters/attribute'
      requestBody:
        description: The values to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AnyThing'
      responses:
        '204':
          description: success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete attribute values. Only on multivaluated attributes.
      operationId: deleteAttributeValues
      tags:
        - objects
        - multivaluated
      parameters:
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/dn'
        - $ref: '#/components/parameters/tab'
        - $ref: '#/components/parameters/attribute'
      requestBody:
        description: The values to remove
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AnyThing'
      responses:
        '204':
          description: success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    AnyThing:
      anyOf:
        - type: string
        - type: array
          items:
            $ref: '#/components/schemas/AnyThing'
        - type: object
    Object:
      type: object
      additionalProperties:
        anyOf:
          - type: string
          - type: array
            items:
              type: string
          - type: object
    SearchResult:
      type: object
      additionalProperties:
        anyOf:
          - type: string
          - type: array
            items:
              type: string
    Type:
      type: object
      properties:
        name:
          type: string
          example: "Role"
        description:
          type: string
          example: "Organizational role"
        mainAttr:
          type: string
          example: "cn"
        nameAttr:
          type: string
          example: "cn"
        icon:
          type: string
          example: "geticon.php?context=types&icon=role&size=16"
        ou:
          type: string
          example: "ou=roles,"
        mainTab:
          type: string
          example: "roleGeneric"
        templateActive:
          type: boolean
        snapshotActive:
          type: boolean
        aclCategory:
          type: string
          example: "role"
        filter:
          type: string
          example: "(&(objectClass=organizationalRole)(!(objectClass=simpleSecurityObject)))"
        management:
          type: string
          example: "groupManagement"
        filterRDN:
          type: string
          example: "(ou:dn:=roles)"
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/TabDef'
          example: [{
                      "CLASS": "roleGeneric",
                      "NAME": "Role"
                    },
                    {
                      "CLASS": "applicationRights",
                      "NAME": "Applications"
                    }]
    TypeList:
      type: object
      additionalProperties:
        type: string
      example: {"CONFIGURATION":"FusionDirectory configuration","DASHBOARD":"Dashboard","OGROUP":"Group","SPECIAL":"special","ROLE":"Role","USER":"User","LOCALITY":"Locality","DEPARTMENT":"Department","DCOBJECT":"Domain Component","COUNTRY":"Country","ACLROLE":"ACL role","ACLASSIGNMENT":"ACL assignment","ORGANIZATION":"Organization","DOMAIN":"Domain"}
    TabDef:
      type: object
      required: [CLASS,NAME]
      properties:
        CLASS:
          type: string
        NAME:
          type: string
    TabInfo:
      type: object
      properties:
        sections:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SectionInfo'
        sections_order:
          type: array
          example: ["main","members"]
          items:
            type: string
    SectionInfo:
      type: object
      properties:
        name:
          type: string
          example: "Information"
        attrs:
          type: array
          example: ["base","cn","description","telephoneNumber","facsimileTelephoneNumber"]
          items:
            type: string
    Error:
      required:
        - message
      properties:
        message:
          type: string
  parameters:
    base:
      name: base
      example: "dc=example,dc=com"
      description: The LDAP base to use
      in: query
      schema:
        type: string
    filter:
      name: filter
      example: "(cn=a*)"
      description: An LDAP filter to search with
      in: query
      schema:
        type: string
    type:
      name: type
      in: path
      example: "user"
      required: true
      description: An object type
      schema:
        type: string
    dn:
      name: dn
      in: path
      example: "uid=fd-admin,dc=example,dc=com"
      required: true
      description: The dn of an existing object
      schema:
        type: string
    tab:
      name: tab
      in: path
      example: "posixAccount"
      required: true
      description: An existing tab CLASS
      schema:
        type: string
    attribute:
      name: attribute
      in: path
      example: "homeDirectory"
      required: true
      description: The attribute
      schema:
        type: string
  securitySchemes:
    session:
      type: apiKey
      name: Session-Token
      in: header
