openapi: "3.0.0"
info:
  description: "This is a sample server."
  version: "1.0.0"
  title: "FusionDirectory"
  contact:
    email: "contact@fusiondirectory.org"
  license:
    name: "GPL2+"
servers:
- url: http://localhost/fusiondirectory/rest.php
security:
- session: []
tags:
- name: "tools"
  description: "API related stuff"
- name: "objects"
  description: "List, get, create, delete objects"
- name: "types"
  description: "Get information on object types and tabs"
paths:
  /login:
    post:
      summary: Login to the API
      security: []
      tags:
        - tools
      requestBody:
        content:
          'application/json':
            schema:
             properties:
                ldap:
                  description: The ldap server to connect to
                  type: string
                user:
                  description: The user to login as
                  type: string
                password:
                  description: The password to use
                  type: string
             required:
               - user
               - password
      responses:
        '200':
          description: An API token
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /token:
    get:
      summary: Get session token for current session
      tags:
        - tools
      responses:
        '200':
          description: An API token
          content:
            application/json:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ldaps:
    get:
      summary: List possible values for ldap parameter for login action
      security: []
      tags:
        - tools
      responses:
        '200':
          description: An API token
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /types:
    get:
      summary: List all types
      tags:
        - types
      responses:
        '200':
          description: A list of types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Types"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /types/{type}:
    get:
      summary: Get informations on a type
      tags:
        - types
      parameters:
        - name: type
          in: path
          required: true
          description: The type to search for
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Type"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /objects/{type}:
    get:
      summary: Search objects of specific type
      tags:
        - objects
      parameters:
        - name: type
          in: path
          required: true
          description: The type to search for
          schema:
            type: string
        - $ref: "#/components/parameters/base"
        - $ref: "#/components/parameters/filter"
        - name: attrs
          in: query
          required: false
          description: The attributes to return
          schema:
            type: object
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Objects"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /objects/{type}/{dn}:
    get:
      summary: Get attributes values from object main tab
      tags:
        - objects
      parameters:
        - name: type
          in: path
          required: true
          description: The type to search for
          schema:
            type: string
        - name: dn
          in: path
          required: true
          description: The dn of the object
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /objects/{type}/{dn}/{tab}:
    get:
      summary: Get attributes values from object specific tab
      tags:
        - objects
      parameters:
        - name: type
          in: path
          required: true
          description: The type to search for
          schema:
            type: string
        - name: dn
          in: path
          required: true
          description: The dn of the object
          schema:
            type: string
        - name: tab
          in: path
          required: true
          description: The tab CLASS
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /objects/{type}/{dn}/{tab}/{attribute}:
    get:
      summary: Get a single attribute value(s)
      tags:
        - objects
      parameters:
        - name: type
          in: path
          required: true
          description: The type to search for
          schema:
            type: string
        - name: dn
          in: path
          required: true
          description: The dn of the object
          schema:
            type: string
        - name: tab
          in: path
          required: true
          description: The tab CLASS
          schema:
            type: string
        - name: attribute
          in: path
          required: true
          description: The attribute
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Object:
      type: object
    Objects:
      type: array
      items:
        $ref: "#/components/schemas/Object"
    Type:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        mainAttr:
          type: string
        nameAttr:
          type: string
        icon:
          type: string
        ou:
          type: string
        mainTab:
          type: string
        templateActive:
          type: boolean
        snapshotActive:
          type: boolean
        aclCategory:
          type: string
        filter:
          type: string
        management:
          type: string
        filterRDN:
          type: string
        tabs:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/TabDef"
    Types:
      type: array
      items:
        $ref: "#/components/schemas/Type"
    TabDef:
      properties:
        CLASS:
          type: string
        NAME:
          type: string
    Error:
      required:
        - message
      properties:
        message:
          type: string
  parameters:
    base:
      name: base
      description: "The LDAP base to use"
      in: query
      schema:
        type: string
    filter:
      name: filter
      description: "An LDAP filter to search with"
      in: query
      schema:
        type: string
  securitySchemes:
    session:
      type: apiKey
      name: Session-Token
      in: header
